A- Un hotel posee N habitaciones. De cada habitación conoce costo por noche, si está
ocupada y, en caso de estarlo, guarda el cliente que la reservó (nombre, DNI y edad).
(i) Genere las clases necesarias. Para cada una provea métodos getters/setters adecuados.
(ii) Implemente los constructores necesarios para iniciar: los clientes a partir de nombre,
DNI, edad; el hotel para N habitaciones, cada una desocupada y con costo aleatorio e/
2000 y 8000.
(iii) Implemente en las clases que corresponda todos los métodos necesarios para:
- Ingresar un cliente C en la habitación número X. Asuma que X es válido (es decir, está
en el rango 1..N) y que la habitación está libre.
- Aumentar el precio de todas las habitaciones en un monto recibido.
- Obtener la representación String del hotel, siguiendo el formato:
{Habitación 1: costo, libre u ocupada, información del cliente si está ocupada}
…
{Habitación N: costo, libre u ocupada, información del cliente si está ocupada}
B- Realice un programa que instancie un hotel, ingrese clientes en distintas habitaciones,
muestre el hotel, aumente el precio de las habitaciones y vuelva a mostrar el hotel.
NOTAS: Reúse la clase Persona. Para cada método solicitado piense a qué clase debe
delegar la responsabilidad de la operación.


// se usaba Persona pero use cliente porque no lo habia leido //


clase cliente

public class Cliente {
    
    private String nombre;
    private int dni;
    private int edad;
    
    public Cliente (String unNombre, int unDni , int unaEdad){
        
        nombre = unNombre;
        dni = unDni;
        edad = unaEdad;
        
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public int getDni() {
        return dni;
    }

    public void setDni(int dni) {
        this.dni = dni;
    }

    public int getEdad() {
        return edad;
    }

    public void setEdad(int edad) {
        this.edad = edad;
    }

    @Override
    public String toString() {
        return "datos del Cliente: " + "nombre: " + nombre + ", dni: " + dni + ", edad: " + edad;
    }
       
}


clase habitacion

public class Habitacion {
 
    
    private double costo;
    private boolean disponible = true;
    private Cliente cliente;
    
    public Habitacion (double elCosto){
        
        costo = elCosto;
        
    }

    public double getCosto() {
        return costo;
    }

    public void setCosto(double costo) {
        this.costo = costo;
    }

    public boolean isDisponible() {
        return disponible;
    }

    public void setDisponible(boolean disponible) {
        this.disponible = disponible;
    }

    public Cliente getCliente() {
        return cliente;
    }

    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

    @Override
    public String toString() {
        return " datos de la Habitacion: " + " costo: " + costo + ", ocupada: " + disponible + ", cliente: " + cliente;
    }
    
    
}

clase hotel

import PaqueteLectura.GeneradorAleatorio;

public class Hotel {
    
    private int dim;
    private Habitacion [] vector;
    private int i;
    
    public Hotel (int cantHabitaciones){
        
        dim = cantHabitaciones;
        vector = new Habitacion [dim];
    }
    
    public void inicicializar (){
     
        double precio;
        
        for (i=0; i<dim; i++){
            precio = GeneradorAleatorio.generarDouble(6000)+2000;
            vector [i] = new Habitacion (precio);
        }
    }
    
    public void insertar (Cliente cli, int x){
        
        vector [x].setCliente(cli);
        vector [x].setDisponible(false);
    }
    
    public void aumentarPrecio (double monto){
        
        for (i=0; i<dim; i++)
            vector [i].setCosto(vector [i].getCosto()+ monto);
    }

    public int getDim() {
        return dim;
    }

    public void setDim(int dim) {
        this.dim = dim;
    }
    

    @Override
    public String toString() {
       
        for (i=0; i<dim; i++){
            
            if (vector [i].isDisponible()== true)
                System.out.println (" Habitacion " + i + " costo: " + vector [i].getCosto() + " no ocupada ");
            else
                System.out.println(" Habitacion " + i + " costo: " + vector [i].getCosto() + " esta ocupada por " + vector [i].getCliente().toString());
                    
        }
        return null; // ?? // esto esta bien? me lo pone java //
    }
    
    
}


MAIN

import PaqueteLectura.Lector;

public class EjercicioHotel {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        
        
        int dimL=0;
        int cantHabitaciones;
        Cliente cliente;
        String nombreCli;
        int edadCli;
        int dniCli;
        int x;
        double monto;
        System.out.println ( " ingrese cantidad de habitaciones ");
        cantHabitaciones = Lector.leerInt();
        Hotel hotel = new Hotel (cantHabitaciones);
        
        hotel.inicicializar();
        
        System.out.println ( " ingrese el nombre del clinete ");
        nombreCli = Lector.leerString();
        
        while ((!nombreCli.equals("zzz")) && (dimL < cantHabitaciones)){
            
            System.out.println(" ingrse el dni del cliente ");
            dniCli = Lector.leerInt();
            System.out.println ( " ingrese la edad del cliente ");
            edadCli = Lector.leerInt();
            System.out.println (" ingrese la habitacion en la que desea estar ");
            x = Lector.leerInt();
            
            cliente = new Cliente ( nombreCli, dniCli, edadCli);
            
            hotel.insertar(cliente, x);
            
            dimL++;
            
            System.out.println ( " ingrese el nombre del cliente ");
            nombreCli = Lector.leerString();
            
        }
        
        hotel.toString();
        
        System.out.println ( " ingrese un monto a aumentar ");
        monto = Lector.leerDouble();
        hotel.aumentarPrecio(monto);
        
        hotel.toString();
     
        
    }
    
}


